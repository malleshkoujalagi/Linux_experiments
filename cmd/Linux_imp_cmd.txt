/********QEMU Simulator********/
/********QEMU Simulator********/


sudo ../../qemu/bin/debug/native/x86_64-softmmu/qemu-system-x86_64 -s -kernel arch/x86_64/boot/bzImage -initrd /boot/initrd.img-3.19.0-25-generic -S -serial stdio -append "root=/dev/ram0 console=ttyAMA0  console=ttyS0" -drive file=/home/pi/kernel_hacker/roofs/rootfs.img,format=raw----------->working on 64 bit

qemu-system-i386 -s -kernel arch/x86/boot/bzImage -initrd /boot/initrd.img-3.14.39 -S /dev/zero

qemu-system-i386 -s -kernel /boot/vmlinuz-3.14.39 -initrd /boot/initrd.img-3.14.39 -S /dev/zero
/*****Re-direct to termina**********/
qemu-system-i386 -s -kernel  arch/x86/boot/bzImage -initrd /boot/initrd.img-3.14.39 -S /dev/zero -serial stdio -append "root=/dev/ram0 console=ttyAMA0  console=ttyS0" ------>Standard

gdb vmlinux
target remote localhost:1234
OR
gdb -ex 'target remote localhost:1234' -ex 'set breakpoint auto-hw' -ex 'break start_kernel' -ex c ./vmlinux ------>standard
gdb -ex 'target remote localhost:1234' -ex 'break rapl_pmu_init' -ex c ./vmlinux



/*********Install ubuntu on Qemu*************/
./qemu/build/x86_64-softmmu/qemu-system-x86_64 -drive file="/home/pi/kernel_hacker/rootfs/ubuntu_15_10.img",if=virtio,index=0 -cdrom /home/pi/kernel_hacker/rootfs/ubuntu_img/ubuntu-15.10-desktop-amd64.iso -boot d  -net nic,macaddr=52:54:00:fa:ce:01,model=virtio -net user,hostfwd=tcp::2001-:22 -m 1024 -enable-kvm -usbdevice mouse

/**Boot**/
./qemu/build/x86_64-softmmu/qemu-system-x86_64 -drive file="/home/pi/kernel_hacker/rootfs/ubuntu_15_10.img",if=virtio,index=0 -net nic,macaddr=52:54:00:fa:ce:01,model=virtio -net user,hostfwd=tcp::2001-:22 -m 1024 -enable-kvm -usbdevice mouse


/********QEMU Simulator********/
/********QEMU Simulator********/


/***********GDB file direct**************/
set logging on gdb.txt

CTRL+ALT ENTER to get mouse icon in QEMU.


/*************GDB***********/
/*************GDB***********/
win--> to remove ctrl+x a
x/20i $pc
info all-registers
set print pretty on
print *variable--> p /xs *bus_kset
explore struct varialbe
pt--> display type of structure info

x/nfu addr-->p /xs *bus_kset
/***Program stop location******/
f
i prog

/******Check register value*****/
info registers
info all-registers
p /x $pc
info f

/********Struct info*****/
pt struct kobject

/****Memory dump using gdb********/
dump binary memory /home/pi/x86.bin 0xc0000000 0xffffffff

/*************GDB***********/
/*************GDB***********/


/*************CSCOPE and CTAGS***************/
/*************CSCOPE and CTAGS***************/
ctags -R
cscope -R

/****Function and variable travels******/
ctrl+}--->Invoke function
ctrl+t--->Go back to functio

/*************CSCOPE and CTAGS***************/
/*************CSCOPE and CTAGS***************/



/******************GIT**************/
/********************************/

/*To remove untracked file in git*/
git clean -f Net/net_device/.tmp_versions/net_dev.mod

/********************************/
/********************************/
